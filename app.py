import streamlit as st
import pandas as pd
import requests
import zipfile
import io
import re

st.set_page_config(page_title="üì∏ Excel ‚Üí ZIP Image Downloader", layout="centered")

st.title("üì∏ ‡πÅ‡∏õ‡∏•‡∏á URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å Excel ‡πÄ‡∏õ‡πá‡∏ô ZIP ‡πÑ‡∏ü‡∏•‡πå")
st.caption("üìé ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ä‡∏∑‡πà‡∏≠ 'Item' ‡πÅ‡∏•‡∏∞ 'URL'")

# üîµ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
st.image("example.png", caption="‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£", use_container_width=True)

# üîµ ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Template
with open("Template.xlsx", "rb") as template_file:
    st.download_button(
        label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (Template)",
        data=template_file,
        file_name="Template.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )

# ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå Excel
uploaded_file = st.file_uploader("Drag and drop file here", type=["xlsx", "xls"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)

    if 'Item' not in df.columns or 'URL' not in df.columns:
        st.error("‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'Item' ‡πÅ‡∏•‡∏∞ 'URL'")
    else:
        if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏µ‡∏ö‡∏≠‡∏±‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"):
            zip_buffer = io.BytesIO()

            total = len(df)
            progress_bar = st.progress(0, text="üì• ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î...")

            with zipfile.ZipFile(zip_buffer, "w", zipfile.ZIP_DEFLATED) as zipf:
                success_count = 0
                for i, row in df.iterrows():
                    item = str(row['Item']).strip()
                    url = row['URL']

                    if pd.isna(url):
                        continue

                    safe_item_name = re.sub(r'[\\/*?:"<>|]', "_", item)

                    try:
                        response = requests.get(url, timeout=10)
                        if response.status_code == 200:
                            zipf.writestr(f"{safe_item_name}.jpg", response.content)
                            success_count += 1
                        else:
                            st.warning(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ {item} (status: {response.status_code})")
                    except Exception as e:
                        st.warning(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö {item}: {e}")

                    progress_bar.progress((i + 1) / total, text=f"üì∑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ({i + 1}/{total})")

            zip_buffer.seek(0)

            st.success(f"‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô {success_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£!")
            st.download_button(
                label="üì¶ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î ZIP",
                data=zip_buffer,
                file_name="downloaded_images.zip",
                mime="application/zip"
            )
